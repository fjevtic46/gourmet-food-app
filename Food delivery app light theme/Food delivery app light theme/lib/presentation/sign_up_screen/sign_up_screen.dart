import 'controller/sign_up_controller.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:movie_s_application5/core/app_export.dart';import 'package:movie_s_application5/core/utils/validation_functions.dart';import 'package:movie_s_application5/widgets/custom_button.dart';import 'package:movie_s_application5/widgets/custom_text_form_field.dart';import 'package:movie_s_application5/domain/googleauth/google_auth_helper.dart';import 'package:movie_s_application5/domain/facebookauth/facebook_auth_helper.dart';
// ignore_for_file: must_be_immutable
class SignUpScreen extends GetWidget<SignUpController> {GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { return SafeArea(top: false, bottom: false, child: Scaffold(extendBody: true, extendBodyBehindAppBar: true, resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.whiteA700, body: Container(width: size.width, height: size.height, padding: getPadding(bottom: 57), decoration: BoxDecoration(color: ColorConstant.whiteA700, image: DecorationImage(image: fs.Svg(ImageConstant.img14signup), fit: BoxFit.cover)), child: Form(key: _formKey, child: Container(width: size.width, padding: getPadding(left: 25, top: 39, right: 25, bottom: 39), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgImage44, height: getVerticalSize(139.00), width: getHorizontalSize(175.00), margin: getMargin(top: 7)), Padding(padding: getPadding(top: 1), child: Text("lbl_foodninja".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtVigaRegular40.copyWith(letterSpacing: getHorizontalSize(0.50)))), Text("msg_deliever_favorite".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtInterSemiBold13.copyWith(letterSpacing: getHorizontalSize(1.00))), Container(height: getVerticalSize(343.00), width: getHorizontalSize(325.00), margin: getMargin(top: 61), child: Stack(alignment: Alignment.bottomLeft, children: [CustomButton(height: 57, width: 152, text: "lbl_google".tr, margin: getMargin(bottom: 36), variant: ButtonVariant.OutlineGray100, padding: ButtonPadding.PaddingT20, fontStyle: ButtonFontStyle.BentonSansMedium14, prefixWidget: Container(margin: getMargin(right: 12), child: CustomImageView(svgPath: ImageConstant.imgGoogle)), onTap: onTapGoogle, alignment: Alignment.bottomRight), CustomButton(height: 57, width: 152, text: "lbl_facebook".tr, margin: getMargin(bottom: 36), variant: ButtonVariant.OutlineGray100, padding: ButtonPadding.PaddingT20, fontStyle: ButtonFontStyle.BentonSansMedium14, prefixWidget: Container(padding: getPadding(left: 8, top: 3, right: 8, bottom: 3), margin: getMargin(right: 13), decoration: BoxDecoration(color: ColorConstant.indigo600, borderRadius: BorderRadius.circular(getHorizontalSize(12.00))), child: CustomImageView(svgPath: ImageConstant.imgFacebook)), onTap: onTapFacebook, alignment: Alignment.bottomLeft), Align(alignment: Alignment.topCenter, child: Padding(padding: getPadding(top: 63), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [CustomTextFormField(width: 325, focusNode: FocusNode(), controller: controller.emailFormController, hintText: "lbl_email".tr, variant: TextFormFieldVariant.OutlineGray100, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "Please enter valid email";} return null;}), CustomTextFormField(width: 325, focusNode: FocusNode(), controller: controller.passwordFormController, hintText: "lbl_password".tr, margin: getMargin(top: 12), variant: TextFormFieldVariant.OutlineGray100, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "Please enter valid password";} return null;}, isObscureText: true)]))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 54, right: 54), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_login_to_your_account".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtBentonSansBold20), Padding(padding: getPadding(top: 190), child: Text("msg_or_continue_with".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtBentonSansBold12)), Padding(padding: getPadding(top: 105), child: Text("msg_forgot_your_password".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtBentonSansMedium12.copyWith(decoration: TextDecoration.underline)))])))]))])))), bottomNavigationBar: Padding(padding: getPadding(left: 117, right: 117, bottom: 60), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomButton(width: 141, text: "lbl_login".tr, onTap: onTapLogin)])))); } 
onTapGoogle() async  {         await GoogleAuthHelper().googleSignInProcess().then((googleUser) {
          if(googleUser!=null){
            //TODO Actions to be performed after signin
          } else {
            Get.snackbar('Error', 'user data is empty');
          }
        }).catchError((onError) {
            Get.snackbar('Error', onError.toString());
        });
         } 
onTapFacebook() async  {             await FacebookAuthHelper().facebookSignInProcess().then((facebookUser) {
              //TODO Actions to be performed after signin
              }).catchError((onError) {
              Get.snackbar('Error', onError.toString());
            });
             } 
onTapLogin() { Get.toNamed(AppRoutes.homeScreen); } 
 }
